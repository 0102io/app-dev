import{bh as w,bi as _,Q as g,bj as b,bk as k,bl as p}from"./index--jBmlGKr.js";const o=new Worker(new URL("/app-dev/assets/obj_det_models-HfUGCnUw.js",import.meta.url),{type:"classic"});let h=!1;const j=new Promise((e,t)=>o.addEventListener("message",r=>{r.data[0]==="ready"&&e(),r.data[0]==="ready-error"&&t(new Error(r.data[1]))}));j.then(()=>{h=!0}).catch(e=>{throw w(e.toString()),_||g(e),e});let d=!1,y={objects:[],handedness:[],hands:[],face:null},a=new OffscreenCanvas(0,0),c=a.getContext("2d",{willReadFrequently:!0});function v(e,t){if(!h||d||t.videoWidth===0||t.videoHeight===0)return;a.width!=t.videoWidth&&(a.width=t.videoWidth),a.height!=t.videoHeight&&(a.height=t.videoHeight),c.drawImage(t,0,0);const r=c.getImageData(0,0,a.width,a.height),n=new Set;if(e.active_mode?.tag==="object_detection")for(const s of e.modes.object_detection.detect)n.add(s);b(e)&&n.add("hand");const i=s=>n.has(s)?(n.delete(s),!0):!1,l=i("hand"),m=i("face"),u=n.size>0;d=!0,o.postMessage(["frame",{enable_object_detection:u,enable_hand_detection:l,enable_face_detection:m},{currentTime:t.currentTime,imgdata:r}],[r.data.buffer])}let f=new k;o.addEventListener("message",e=>{e.data[0]==="frame-result"&&(y=e.data[1],d=!1,f.onFrame(),p(f.getFramerate()))});export{y as d,v as u};
